---
title: "Social Risk Appraisal Model Figures"
format: 
  beamer:
    fig-pos: 'h'
    fig-width: 5.5
    fig-height: 3
engine: knitr
pdf-engine: pdflatex
colorlinks: true
---

# Intro




## Introduction

```{r setup, include=FALSE}
PERCENT_SIGN = '%'
#knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = T, cache.lazy = F)
library(data.table)
library(tidyverse)
library(stringr)
library(cowplot)
library(igraph)
library(RColorBrewer)
library(stringr)
s = proc.time()[3]
```

```{r utility_functions}


color_map = c(
  "Contagion"             = "#BC3C29FF",
  "Social Risk Appraisal" = "#0072B5FF",
  "Complex Contagion"     = "#E18727FF"
)
names(color_map) = paste0("Fear Spread via:\n",names(color_map))


plot_theme = function(base_size=10){
  theme_classic(base_size = base_size,base_family = "Times New Roman") +
  theme(axis.text.y.right = element_blank(),
        axis.line.y.right = element_blank(),
        axis.ticks.y.right = element_blank(),
        legend.position = "top",
        strip.background = element_blank(),
        axis.title = element_text(color = 'black'),
        axis.text = element_text(color = 'black')
        )
}

make_variable_names = function(data_names){
  data_names |>
    stringr::str_replace_all(pattern = "[.]", replacement = "_") |>
    stringr::str_replace_all(pattern = "-"  , replacement = "_") |>
    stringr::str_replace_all(pattern = "[?]", replacement = "") |>
    stringr::str_replace_all(pattern = "\\[", replacement = "") |>
    stringr::str_replace_all(pattern = "\\]", replacement = "") |>
    stringr::str_replace_all(pattern = " "  , replacement = "_")
}


# data cleaning
prep_data = function(dat)
{
setnames(dat,new = make_variable_names(names(dat)))
setorder(dat,"step","run_number")
dat[,experiment:=paste0("Fear Spread via:\n",fcase(Fear_Mechanism=="Complex Contagion-Gamma","Contagion",
                                                  Fear_Mechanism=="FTA","Social Risk Appraisal"))]
dat
}

# core analysis plot
epi_plot = function(dat,top.n=NULL,one_disease_rate = F,txt_size = 10,...)
{
n_agents = dat[,unique(num_turtles)]
dat[,count_infected:=n_agents*percent_infected/100]


sra_hypothesis <- c("Gamma"="g","Anchor"="l")[dat[,unique(type_of_fear_distribution)]]

if (one_disease_rate){
  disease_rate = dat[,unique(Disease_Infection_Rate)] %>% median()
  dat = dat[Disease_Infection_Rate==disease_rate]
}

group_cols = c("experiment","Disease_Infection_Rate","Fear_Infection_Rate")

if ("Release_Mechanism" %in% names(dat)){
  group_cols = c(group_cols,"Release_Mechanism")
}else{
  dat[,Release_Mechanism:='fixed']
}

# select run leading to median levels of infection
cols = c(group_cols,"percent_infected","run_number")
setorder(dat,"percent_infected")
last_step = dat[step==max(step),]
setorderv(last_step,c(group_cols,"percent_infected"))
cumulative_rns = last_step[,
                 .(percent_infected = head(percent_infected,25) %>% tail(1) # with 50 runs, select top 25 and then 25th
                   ),
                   by=c(group_cols,"step")] %>%
  merge.data.table(dat,
                   by = c(group_cols,"step","percent_infected"),
                   all.x = F,
                   all.y = F) %>%
  setorder("run_number") %>% # in the event of ties, pick lowest run number
  unique(by=group_cols) %>%
  .[,run_number]



dat = merge.data.table(dat,
                       y = dat[step>2,
                              .(day_max       = step[which.max(count_disease_I)],
                                peak_infected = max(count_disease_I)/n_agents,
                                epidemic_end  = if_else(min(count_disease_I)==0,step[which.min(count_disease_I)],149)),
                               by=run_number],
                       by = "run_number")
#print(dat)

infections_at_peak = dat |> filter(step==day_max) %>%
  dplyr::select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)
infections_at_end = dat |> filter(step==max(step)) %>% 
  dplyr::select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)

infections_epi_end = dat |> filter(step==epidemic_end) %>%
  dplyr::select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)



labels = dat |> 
  filter(step==max(step)) |> 
  group_by(across(all_of(group_cols))) |> 
  summarise(CI            = paste0("Avg Total Infected: ",round(mean(percent_infected),2),PERCENT_SIGN," ± ",round(sd(percent_infected),2)),
            peak_infected = paste0("Avg Peak Infected: ",round(mean(100*peak_infected),2),PERCENT_SIGN," ± ",round(sd(100*peak_infected),2)),
            epidemic_end  = paste0("Avg Duration: ",round(mean(epidemic_end),2)," ± ",round(sd(epidemic_end),2)),
            day_max = paste0(day_max))


test_results <- NULL
disease_rate_and_release_mechanisms <- unique(dat[,c("Disease_Infection_Rate","Release_Mechanism")])
for (row in 1:nrow(disease_rate_and_release_mechanisms)){
  disease_rate <- disease_rate_and_release_mechanisms[row,Disease_Infection_Rate]
  release_mechanism <- disease_rate_and_release_mechanisms[row,Release_Mechanism] 
  d <- dat %>% filter(Disease_Infection_Rate==disease_rate & Release_Mechanism==release_mechanism & step==max(step))
  
  variable <- "percent_infected"

  form = as.formula(paste0(variable,"~","experiment"))
  result = NULL
    if ("Fear Spread via:\nComplex Contagion" %in% d[,unique(experiment)]){
      test_CC <- t.test(form,
                      equal.var=F,
                      alternative = "l",
                      data = d %>% 
                      filter(experiment!="Fear Spread via:\nSocial Risk Appraisal") %>%
                      mutate(experiment = factor(experiment,
                                                 levels = c("Fear Spread via:\nContagion",
                                                            "Fear Spread via:\nComplex Contagion"))))$p.value
      result = bind_rows(result,
                         data.frame(list(
                          "experiment" = c("Fear Spread via:\nComplex Contagion"),
                          "pval"       = c(test_CC))
                          ))
    }
    if ("Fear Spread via:\nSocial Risk Appraisal" %in% d[,unique(experiment)]){ 
      test_SRA <- t.test(form,
                     equal.var=F,
                     alternative = sra_hypothesis,
                     data = d %>% 
                        filter(experiment!="Fear Spread via:\nComplex Contagion") %>%
                        mutate(experiment = factor(experiment,
                                                   levels = c("Fear Spread via:\nContagion",
                                                              "Fear Spread via:\nSocial Risk Appraisal"))))$p.value
      result = bind_rows(result,
                         data.frame(list(
                          "experiment" = c("Fear Spread via:\nSocial Risk Appraisal"),
                          "pval"       = c(test_SRA))
                          ))
    }
    result = result %>%
              mutate(Disease_Infection_Rate = disease_rate,
                      variable = variable,
                     Release_Mechanism = release_mechanism)
    
    test_results = bind_rows(test_results,result)
}


test_results <- test_results %>% 
  mutate(stars = case_when(pval <1e-3 ~ "***",
                           pval <1e-2 ~ "**",
                           pval <0.05 ~ "*",
                           pval <0.1 ~ ".",
                           pval <1 ~ " "))
test_results_wide <- test_results %>% 
  dplyr::select(-pval) %>%
  pivot_wider(names_from = "variable", values_from = "stars",names_prefix = "stars_")



# Add to CI labels 

labels <- labels %>% 
  left_join(test_results_wide, by = c("experiment","Disease_Infection_Rate","Release_Mechanism")) %>%
  mutate(stars_percent_infected = if_else(is.na(stars_percent_infected),"",stars_percent_infected)) %>%
  mutate(CI            = paste0(CI,stars_percent_infected)) %>%
  dplyr::select(experiment,Disease_Infection_Rate,CI) %>%
  unique()

label_peak_infect =  infections_at_peak %>% 
                     filter(run_number %in% cumulative_rns) %>%
                     mutate(peak_infections = paste0('Peak infections: ',round(100*count_disease_I/n_agents,2),PERCENT_SIGN))


label_epidemic_ends = infections_epi_end %>%
                      filter(run_number %in% cumulative_rns) %>%
                      mutate(epi_end_label = paste0('Epidemic ends at tick: ',step))

label_arrows = merge.data.table(label_peak_infect, label_epidemic_ends, by = "run_number", suffixes = c("_peak","_end")) %>%
               mutate(label = paste0(peak_infections,'\n',epi_end_label))

p = dat  |> 
  mutate(alpha = if_else(run_number %in% cumulative_rns,1.0,0.1)) %>%
  ggplot() +
  # plot
  aes(x=step,y=count_disease_I,color=experiment,group=run_number,alpha=alpha) +
  stat_summary(geom = "line",aes(group=-1),fun=mean,linetype="dashed",show.legend = F) +
  geom_line(show.legend = F) + # individual runs
  facet_grid(Disease_Infection_Rate~experiment) +
  # color
  scale_color_manual(values=color_map)+
  # format
  labs(y="Infected Agents",x="Tick") +
  plot_theme(...)



# add labels
y.lim = ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]

lbl_CI = 0.85
lbl_peak_infected_arrow = 0.52
lbl_peak_infected_text = 0.56
lbl_epi_end_arrow = 0.40
lbl_epi_end_text = 0.46
p = p + geom_text(data = labels,
            mapping = aes(label=CI),x=100,y=lbl_CI*y.lim,alpha=1.0,
            group=-1,color='black',size=txt_size/.pt,show.legend = F,family="Times New Roman") +
  # arrow and label for peak infected
  geom_segment(
    data = label_peak_infect,
    mapping = aes(xend=step,yend=count_disease_I,y=NULL,group=NULL),
    alpha = 1.0,
    x = 120, y = (lbl_peak_infected_arrow*y.lim),
    lineend = "round", # See available arrow types in example above
    linejoin = "round",
    size = 0.5, 
    arrow = arrow(length = unit(0.1, "inches"),angle=20,type = "closed"),
    colour = "black" # Also accepts "red", "blue' etc
  ) +
  geom_label(data = label_peak_infect,
            mapping = aes(label=peak_infections,alpha=1.0),x=115,y=lbl_peak_infected_text*y.lim,
            label.size = NA,
            group=-1,color='black',size=txt_size/.pt,show.legend = F,family="Times New Roman") +
  
  # arrow and label for epidemic end
  geom_segment(
    data = label_epidemic_ends,
    mapping = aes(xend=step,yend=count_disease_I,y=NULL,group=NULL),
    alpha = 1.0,
    x = 120, y = (lbl_epi_end_arrow*y.lim),
    lineend = "round", # See available arrow types in example above
    linejoin = "round",
    size = 0.5, 
    arrow = arrow(length = unit(0.1, "inches"),angle=20,type = "closed"),
    colour = "black" # Also accepts "red", "blue' etc
  ) +
  geom_label(data = label_epidemic_ends,
            mapping = aes(label=epi_end_label,alpha=1.0),x=115,y=lbl_epi_end_text*y.lim,
            label.size = NA,
            group=-1,color='black',size=txt_size/.pt,show.legend = F,family="Times New Roman")

if(one_disease_rate==F){
  p = p + 
    scale_y_continuous(sec.axis = sec_axis(~.*1.0,name="Disease Infection Rate"))
}
if (one_disease_rate){
  p = p + 
    theme(strip.background = element_blank(),
          strip.text.y = element_blank())
}
p

}
```


# Socially Driven Fear Amplifications
## Spatially Clustered
```{r}
dat.spatial = rbindlist(
  l = list(
    fread('../data/core/experiment-01-fear-increasing-spatially-clustered-table.csv',skip = 6) %>% prep_data(),
    fread('../data/core/experiment-01a-fear-increasing-spatially-clustered-complex-contagion-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)
p.spatial = dat.spatial %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
p.spatial
ggsave('../figures/core/Supp/Socially-Driven-Fear-Amplification-Spatially-Clustered.pdf', height = 8, width = 11.5, device = cairo_pdf)
```


## Small World
```{r}
dat.small_world = rbindlist(
  l = list(
    fread('../data/core/experiment-03-fear-increasing-small-world-table.csv',skip = 6) %>% 
    prep_data(),
    fread('../data/core/experiment-03a-fear-increasing-small-world-complex-contagion-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number))
)


dat.small_world %>%
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
ggsave('../figures/core/Supp/Socially-Driven-Fear-Amplification-Small-World.pdf',height = 8, width = 11.5, device = cairo_pdf)
```

## Combined
```{r}
p.spatial = dat.spatial %>% 
  epi_plot(base_size = 8, one_disease_rate = T,txt_size = 4) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 10))
p.small_world = dat.small_world %>% 
  epi_plot(base_size = 8, one_disease_rate = T,txt_size = 4) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 10))

plot_grid(p.spatial,
                   p.small_world,
                   nrow=2,labels = c("(a)","(b)"),
          label_fontface = "italic",label_fontfamily = "Times")
ggsave('../figures/core/Socially-Driven-Fear-Amplification.pdf', height = 4, width = 6, device = cairo_pdf)
ggsave('../figures/core/Figure-01.png', height = 4, width = 6, device = 'png',dpi=1200,bg='white')
```

# Socially Driven Fear Extinction

## Spatially Clustered

```{r}
dat.spatial = rbindlist(
  l = list(
    fread('../data/core/experiment-02-fear-decreasing-spatially-clustered-table.csv',skip = 6) %>% prep_data() ,
    fread('../data/core/experiment-02a-fear-decreasing-spatially-clustered-complex-contagion-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)
p.spatial = dat.spatial %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))

p.spatial
ggsave('../figures/core/Supp/Socially-Driven-Fear-Extinction-Spatially-Clustered.pdf', height = 8, width = 11.5, device = cairo_pdf)
```

## Small-World
```{r}
dat.small_world = rbindlist(
  l = list(
    fread('../data/core/experiment-04-fear-decreasing-small-world-table.csv',skip = 6) %>% prep_data() ,
    fread('../data/core/experiment-04a-fear-decreasing-small-world-complex-contagion-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)



p.small_world = dat.small_world %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
p.small_world
ggsave('../figures/core/Supp/Socially-Driven-Fear-Extinction-Small-World.pdf', height = 8, width = 11.5, device = cairo_pdf)
```

## Combined
```{r}
p.spatial = dat.spatial %>% 
  epi_plot(base_size = 8, one_disease_rate = T,txt_size = 4) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 10))
p.small_world = dat.small_world %>% 
  epi_plot(base_size = 8, one_disease_rate = T,txt_size = 4) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 10))

plot_grid(p.spatial,
                   p.small_world,
                   nrow=2,
          labels = c("(a)","(b)"),
          label_fontface = "italic",label_fontfamily = "Times")

ggsave('../figures/core/Socially-Driven-Fear-Extinction.pdf',height = 4, width = 6, device = cairo_pdf)
ggsave('../figures/core/Figure-02.png',height = 4, width = 6, device = 'png', bg = 'white',dpi=1200)

```

# Clustering



## Fear Amplification
```{r}
lvls = paste0("Node Swapping: ",round(100*c(0,0.25,0.5,0.75,1),0),PERCENT_SIGN)
dat = fread('../data/core/experiment-05-fear-increasing-small-world-vary-clustering-and-swapping-table.csv',
              skip=6) %>%
  prep_data() %>%
  filter(step == max(step)) %>%
  mutate(node_swap = percent_nodes_swapped) %>%
  mutate(percent_nodes_swapped = paste0("Node Swapping: ",round(100*percent_nodes_swapped,0),PERCENT_SIGN)) %>%
  mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls)) %>%
  mutate(experiment = relevel(factor(experiment),ref="Fear Spread via:\nContagion"))

star_labeler = function(x){
  x %>% mutate(stars = case_when(pval <1e-3 ~ "***",
                           pval <1e-2 ~ "**",
                           pval <0.05 ~ "*",
                           pval <0.1 ~ ".",
                           pval <1 ~ " ")) %>%
      mutate(label = paste0(round(Estimate,2),stars))
}
data_labels = NULL
for (ns in dat[,unique(percent_nodes_swapped)]){
  m = lm(percent_infected ~ percent_links_rewired + experiment, data = dat[percent_nodes_swapped==ns,])
  m_summary = summary(m)
  coefs = m_summary$coefficients[,c("Estimate","Pr(>|t|)")] %>% 
    data.table(keep.rownames = "variable") %>% 
    rename(pval=`Pr(>|t|)`) %>%
    star_labeler()
  
  eq1 = paste0('beta[rewire] : "',eval(coefs[variable=='percent_links_rewired',label]),'"')
  eq2 = paste0('beta[SRA] : "',eval(coefs[variable=='experimentFear Spread via:\nSocial Risk Appraisal',label]),'"')
  
  data_labels = bind_rows(data_labels,tibble(percent_nodes_swapped=ns,label1=eq1,label2=eq2,experiment="The"))
}
data_labels <- data_labels %>% mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls))
p.clustered_fear_increasing = dat %>%
  ggplot() +
  aes(x=percent_links_rewired,y=percent_infected,col=experiment) +
  geom_point(alpha=0.1,size=0.01) +
  stat_summary(geom = "line", fun = mean) +
  stat_summary(geom="point",fun = mean,size=0.75) +
  scale_color_manual(values=color_map,name=NULL) +
  geom_text(data = data_labels,mapping = aes(label=label1),
            parse = T,
            x=0.165,y=20,alpha=1.0,color='black',family = "Times New Roman",size=6/.pt) +
  geom_text(data = data_labels,mapping = aes(label=label2),
            parse = T,
            x=0.1925,y=20,alpha=1.0,color='black',family = "Times New Roman",size=6/.pt) +
  plot_theme(base_size = 8) +
  facet_wrap(~percent_nodes_swapped,ncol=1) +
  scale_x_continuous(labels = scales::percent) + 
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  labs(x="Percent Links Rewired (Decreasing Clustering)",
       y="Cumulative Infections\n")


# also do linear regression using node swapping as a factor:

reg <- lm(percent_infected ~ percent_links_rewired + experiment + node_swap, data = dat)
summary(reg)
p.clustered_fear_increasing
```
## Fear Extinction
```{r}

dat = fread('../data/core/experiment-06-fear-decreasing-small-world-vary-clustering-and-swapping-table.csv',skip=6) %>%
  prep_data() %>%
  filter(step == max(step)) %>%
  mutate(node_swap = percent_nodes_swapped) %>%
  mutate(percent_nodes_swapped = paste0("Node Swapping: ",round(100*percent_nodes_swapped,0),PERCENT_SIGN)) %>%
  mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls))
data_labels = NULL
for (ns in dat[,unique(percent_nodes_swapped)]){
  m = lm(percent_infected ~ percent_links_rewired + experiment, data = dat[percent_nodes_swapped==ns,])
  m_summary = summary(m)
  coefs = m_summary$coefficients[,c("Estimate","Pr(>|t|)")] %>% 
    data.table(keep.rownames = "variable") %>% 
    rename(pval=`Pr(>|t|)`) %>%
    star_labeler()
  
  eq_label = paste0("$\\beta_{rewire}$=",
                    coefs[variable=='percent_links_rewired',label],
                    '$\\n',
                    "$\\beta_{SRA}$=",
                         coefs[variable=='experimentFear Spread via:\nSocial Risk Appraisal',label]
                         )
  eq1 = paste0('beta[rewire] : "',eval(coefs[variable=='percent_links_rewired',label]),'"')
  eq2 = paste0('beta[SRA] : "',eval(coefs[variable=='experimentFear Spread via:\nSocial Risk Appraisal',label]),'"')
  
  data_labels = bind_rows(data_labels,tibble(percent_nodes_swapped=ns,label1=eq1,label2=eq2,experiment="The"))
}
data_labels <- data_labels %>% mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls))
p.clustered_fear_decreasing = dat %>%
  ggplot() +
  aes(x=percent_links_rewired,y=percent_infected,col=experiment) +
  geom_point(alpha=0.1,size=0.01) +
  stat_summary(geom = "line", fun = mean) +
  stat_summary(geom="point",fun = mean,size=0.75) +
  geom_text(data = data_labels,mapping = aes(label=label1),
            parse = T,
            x=0.165,y=70,alpha=1.0,color='black',family = "Times New Roman",size=6/.pt) +
  geom_text(data = data_labels,mapping = aes(label=label2),
            parse = T,
            x=0.1925,y=70,alpha=1.0,color='black', family = "Times New Roman",size=6/.pt) +
  scale_color_manual(values=color_map,name=NULL) +
  plot_theme(base_size = 8) +
  facet_wrap(~percent_nodes_swapped,ncol=1) +
  scale_x_continuous(labels = scales::percent) + 
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  labs(x="Percent Links Rewired (Decreasing Clustering)",y="Cumulative Infections\n")
reg <- lm(percent_infected ~ percent_links_rewired + experiment + node_swap, data = dat)
summary(reg)
p.clustered_fear_decreasing
```

## Combined

```{r}
plot_grid(
  p.clustered_fear_increasing + 
    labs(title="Socially-Driven Fear Amplification") + 
    theme(plot.title = element_text(hjust = 0.5,size=8)) +
    scale_y_continuous(limits = c(0,80), labels = function(x) paste0(x,"%"),breaks = seq(0,80,by=20)),
  p.clustered_fear_decreasing + 
    labs(title="Socially-Driven Fear Extinction") + 
    theme(plot.title = element_text(hjust = 0.5,size=8)) + 
    scale_y_continuous(limits = c(0,80), labels = function(x) paste0(x,"%"),breaks = seq(0,80,by=20)),
  labels = c("(a)","(b)"),
          label_fontface = "italic",label_fontfamily = "Times"
)
ggsave('../figures/core/Figure-05.png', height = 4, width = 6, device = 'png', bg='white',dpi=1200)
ggsave('../figures/core/SRA-Results-Robust-to-Clustering.pdf', height = 4, width = 6, device = cairo_pdf)
```




# 75-Agent Example

## 75-Agent Example
```{r}
brewer_set1 = brewer.pal(9,"Set1")

pal = c(red = "#BC3C29FF",
        blue = "#0072B5FF",
        green = "#20854EFF",
        orange = "#E18727FF",
        yellow = "#FFDC91FF",
        gray   = "gray")

get_network = function(net_file,lastrow,skipper,nrows)
{
  

el_file = fread(net_file,skip=skipper,nrows = lastrow-skipper-1) %>%
  dplyr::select(end1,end2) %>%
  mutate(end1 = str_extract(end1,pattern = '\\d+'),
         end2 = str_extract(end2,pattern = '\\d+')
         ) %>%
  rename(from=end1,
         to=end2)

coordinates = fread(net_file,skip=12,nrows=nrows) %>% 
  dplyr::select(xcor,ycor,disease_state=`disease-state`,
         initial_fear_score=`initial-fear-score`,
         fear_state=`fear-state`,
         hiding=`hiding?`,
         fear_score=`fear-score`,
         fear_score_when_infected=`fear-score-when-infected`,
         nlogo_color=color,who) %>%
  mutate(disease_state = str_extract(disease_state,pattern="\\w+"),
         fear_state    = str_extract(fear_state,pattern="\\w+"),
  

  color = case_when(
    disease_state == 'S' & fear_state=='S' ~ pal['blue'],
    disease_state == 'S' & fear_state=='I' ~ pal['yellow'],
    disease_state == 'S' & fear_state=='R' ~ pal['blue']),
  color = case_when(
    disease_state == 'I' & fear_state=='S' ~ pal['red'],
    disease_state == 'I' & fear_state=='I' ~ pal['orange'],
    disease_state == 'I' & fear_state=='R' ~ pal['red'],
    disease_state == 'R'                   ~ pal['gray'],
    .default = color),
  color = case_when(
    hiding                                 ~ pal["green"],
    .default = color)
  )

coordinates[,name:=.I-1]
setcolorder(coordinates,neworder = c("name","xcor","ycor","disease_state","fear_state","color","nlogo_color","who"))

net = graph.data.frame(el_file,directed=F,vertices=coordinates)

co = layout.norm(
  as.matrix(coordinates[,c("xcor","ycor")])* 1.05
  )
net$layout = co


out = list(
  net = net,
  df = coordinates
)


return(out)
}




out1 = get_network(
  net_file = '../data/core/one-shot-example-Contagion.csv',
  lastrow = 10445,
  skipper = 10294,
  nrows=75
)
net1 = out1$net
out2 = get_network(
  net_file = '../data/core/one-shot-example-FTA.csv',
  lastrow = 10445,
  skipper = 10294,
  nrows=75
)
net2 = out2$net

# check that initial_fear_scores across all 75 agents match
stopifnot(all(out1$df$initial_fear_score==out2$df$initial_fear_score))

data_contagion = out1$df %>% as.data.table()
data_fta = out2$df %>% as.data.table()

cols = c("name","xcor","ycor","disease_state","initial_fear_score","fear_score","fear_score_when_infected")
data_combined = merge.data.table(
  data_contagion[,..cols],
  data_fta[,..cols],
  by = c("name","xcor","ycor")
) %>%
  mutate(contagion_vs_SRA = paste(disease_state.x,disease_state.y,sep = "-")) %>%
  mutate(compare_color = case_when(
    contagion_vs_SRA == "R-R" ~ "gray",
    contagion_vs_SRA == "S-R" ~ "#FFDC91FF",
    contagion_vs_SRA == "R-S" ~ "#BC3C29FF",
    contagion_vs_SRA == "S-S" ~ "#0072B5FF",
  ))

# now we also need the tick-by-tick agent data to get their fear scores over time

extract_agent_data = function(fn, experiment)
{
tmp = fread(fn, skip = 6) 

dt = tmp[,"[(list who ticks disease-state fear-state fear-score tick-infected dend)] of turtles"] %>% 
  pull() %>% 
  str_split(pattern = "\\] \\[") %>% 
  unlist() %>% 
  str_remove_all(pattern = '\\[|\\]') %>%
  str_split(pattern = " ") %>% 
  data.frame() %>% 
  data.table::transpose() %>%
  as.data.table()

names(dt) = c("who","ticks","disease_state","fear_state","fear_score","tick_infected","dend")

dt[,who:=as.integer(who)]
dt[,ticks:=as.integer(ticks)]
dt[,fear_score:=as.numeric(fear_score)]
dt[,tick_infected:=as.integer(tick_infected)]

dt[,experiment:=experiment]

dt
}
contagion_tick_by_tick = extract_agent_data(
                   fn = '../data/core/experiment-08-one-shot-example-Contagion-table.csv',
                   experiment = "Contagion")

fta_tick_by_tick = extract_agent_data(
                   fn = '../data/core/experiment-08-one-shot-example-FTA-table.csv',
                   experiment = "SRA")

# now get the fear scores of the *red* agents on the day they *would* have been infected under SRA
agents_infected_under_contagion_but_not_SRA = contagion_tick_by_tick[who %in% data_combined[contagion_vs_SRA=="R-S",name],][disease_state=="I",][,head(.SD,1),by=who] %>%
  dplyr::select(who,fear_score,ticks=tick_infected) %>%
  mutate(ticks = ticks + 1)

agents_infected_under_contagion_but_not_SRA_on_day_of_contagion_infection = agents_infected_under_contagion_but_not_SRA %>%
  merge.data.table(y = fta_tick_by_tick, by = c("who","ticks")) %>%
  mutate(fear_score_label = round(fear_score.x - fear_score.y,3)) %>%
  dplyr::select(who,fear_score_label)

# and look up what they were doing on that same tick in SRA

agents_infected_under_SRA_but_not_contagion = fta_tick_by_tick[who %in% data_combined[contagion_vs_SRA=="S-R",name],][disease_state=="I",][,head(.SD,1),by=who] %>%
merge.data.table(y = data_combined[contagion_vs_SRA=="S-R",.(who=name,initial_fear_score=initial_fear_score.x)],by="who") %>%
  mutate(fear_score_label = round(fear_score - initial_fear_score,3)) %>%
  dplyr::select(who,fear_score_label)


d1 = data_combined %>%
  filter(contagion_vs_SRA!="S-R"  & contagion_vs_SRA != "R-S") %>%
  dplyr::select(who=name,xcor,ycor,compare_color,contagion_vs_SRA,initial_fear_score=initial_fear_score.x) %>%
  mutate(fear_score_label = "")
d2 = data_combined %>% 
  dplyr::select(who=name,xcor,ycor,compare_color,contagion_vs_SRA,initial_fear_score=initial_fear_score.x) %>%
  merge.data.table(y = agents_infected_under_contagion_but_not_SRA_on_day_of_contagion_infection, by = "who")

d3 = data_combined %>% 
  dplyr::select(who=name,xcor,ycor,compare_color,contagion_vs_SRA,initial_fear_score=initial_fear_score.x) %>%
  merge.data.table(y = agents_infected_under_SRA_but_not_contagion, by = "who")

data_combined_v2 = rbindlist(l = list(d1,d2,d3))  %>%
  arrange(who)

V(net1)$compare_color = data_combined$compare_color
V(net1)$label = data_combined_v2$fear_score_label


p <- ~plot(
  net1,
  vertex.size=8,
  vertex.color=data_combined$compare_color,
  vertex.frame.color=NULL,
  vertex.frame.width=0.0,
  vertex.label.dist=0,
  edge.label.color='black',
  #vertex.label=data_combined_v2$fear_score_label,
  vertex.label=ifelse(data_combined_v2$compare_color %in% c("#BC3C29FF","#FFDC91FF"),round(data_combined_v2$initial_fear_score,3),""),
  vertex.label.color = 'black',
  vertex.label.cex = 0.25
)

ggdraw() + draw_plot(p)
#ggsave('../figures/core/75-Agent-Network.pdf')
knitr::plot_crop('../figures/core/75-Agent-Network.pdf',quiet = T)


plot_table = data_combined[,.(`Avg Initial Fear Score` = round(mean(initial_fear_score.x),3),
                              `Avg Fear Score When Infected Under Contagion` = round(mean(fear_score_when_infected.x),3),
                              `Avg Fear Score When Infected Under SRA` = round(mean(fear_score_when_infected.y),3),
                              count = .N),c("contagion_vs_SRA","compare_color")] %>%
  separate(col = contagion_vs_SRA, into = c("Contagion","SRA"),sep = "-") %>%
  as.data.table()

plot_table[,compare_color:=factor(compare_color,levels = c("#0072B5FF","gray","#BC3C29FF","#FFDC91FF"))]

plot_table %>%
  mutate(`Avg Initial Fear Belief` = paste0(round(`Avg Initial Fear Score`,3), " (",count,")")) %>%
  dplyr::select(Contagion,SRA,`Avg Initial Fear Belief`,Color=compare_color) %>%
  fwrite(file = '../figures/core/75-Agents-Table.csv')
```


# Network

## Sample Network

```{r}
brewer_set1 = brewer.pal(9,"Set1")
pal = c(red = brewer_set1[1],
        blue = brewer_set1[2],
        green = brewer_set1[3],
        orange = brewer_set1[5],
        yellow = brewer_set1[6],
        gray   = brewer_set1[9])

lastrow = 14220
skipper = 11219
net_file = '../data/core/sample-network.csv'
el_file = fread(net_file,skip=skipper,nrows = lastrow-skipper-1) %>%
  select(end1,end2) %>%
  mutate(end1 = str_extract(end1,pattern = '\\d+'),
         end2 = str_extract(end2,pattern = '\\d+')
         ) %>%
  rename(from=end1,
         to=end2)

coordinates = fread(net_file,skip=12,nrows=1000) %>% 
  select(xcor,ycor,disease_state=`disease-state`,fear_state=`fear-state`,hiding=`hiding?`,nlogo_color=color,who) %>%
  mutate(disease_state = str_extract(disease_state,pattern="\\w+"),
         fear_state    = str_extract(fear_state,pattern="\\w+"),
  color = case_when(
    disease_state == 'S' & fear_state=='S' ~ pal['blue'],
    disease_state == 'S' & fear_state=='I' ~ pal['yellow'],
    disease_state == 'S' & fear_state=='R' ~ pal['blue']),
  color = case_when(
    disease_state == 'I' & fear_state=='S' ~ pal['red'],
    disease_state == 'I' & fear_state=='I' ~ pal['orange'],
    disease_state == 'I' & fear_state=='R' ~ pal['red'],
    disease_state == 'R'                   ~ pal['gray'],
    .default = color),
  color = case_when(
    hiding                                 ~ pal["green"],
    .default = color)
  )

coordinates$name <- 0:(nrow(coordinates)-1)
setcolorder(coordinates,neworder = c("name","xcor","ycor","disease_state","fear_state","color","nlogo_color","who"))

net = graph.data.frame(el_file,directed=F,vertices=coordinates)

co = layout.norm(as.matrix(coordinates[,c("xcor","ycor")]))
p = ~plot(
  net,
  layout=co,
  vertex.size=3,
  vertex.color=coordinates$color,
  vertex.frame.color=NULL,
  vertex.frame.width = 0.75,
  vertex.label.dist=0,
  edge.label.color='black',
  vertex.label=""
)
plot_grid(
  ggdraw() + draw_plot(p), ggdraw() + draw_image(image = '../data/core/States.png'),
  nrow=1
)
ggsave('../figures/core/Figure-08.png',width = 6, height = 4,bg = 'white',dpi=1200)
knitr::plot_crop('../figures/core/Figure-08.png',quiet = T)

#ggsave('../figures/core/network.pdf',width = 11.5, height = 8)
knitr::plot_crop('../figures/core/network.pdf',quiet = T)
```

# Canonical Results

## Aligning Model to Qualitative Takeaways of Coupled and Complex Contagion


```{r}
small_world_cc = fread('../data/core/experiment-09-fear-decreasing-small-world-limited-uptake-under-complex-contagion-table.csv',skip = 6) %>% 
  prep_data() %>%
  mutate(experiment = factor(
    case_when(fear_threshold == 1 ~ "SRA + Simple Contagion",
              fear_threshold == 2 ~ "SRA + Complex Contagion"),
      levels = c("SRA + Simple Contagion","SRA + Complex Contagion"))
    ) %>%
  dplyr::select(step,experiment,count_disease_I,count_hiding,run_number) %>%
  pivot_longer(cols = c("count_disease_I","count_hiding")) %>%
  mutate(name = case_when(
    name=="count_disease_I" ~ "Infected",
    name=="count_hiding" ~ "Hiding"
  ) %>% factor(levels = c("Infected","Hiding")))

small_world_cc.labels = bind_rows(
  data.frame(experiment = "SRA + Simple Contagion", name = "Infected", label = "Multiple waves of infection",step=90,value=75,run_number=-1),
  data.frame(experiment = "SRA + Complex Contagion", name = "Hiding", label = "Limited behavioral adaptation on small-world",step=90,value=100,run_number=-1)
  ) %>% 
  mutate(name = factor(name,levels = c("Infected","Hiding"))) %>%
  mutate(experiment = factor(experiment,levels = c("SRA + Simple Contagion","SRA + Complex Contagion")))
  

small_world_cc %>%
  ggplot() +
  aes(x=step,y=value,col=name,group=run_number) +
  geom_line(show.legend = F) +
  facet_grid(experiment ~ name) +
  scale_color_manual(values = c("Infected"="#D95F02","Hiding"="#1B9E77"),name=NULL) +
  plot_theme(base_size = 8) +
  geom_label(data = small_world_cc.labels, mapping = aes(label=label),
             label.size = NA, col='black',size=6/.pt,family = "Times New Roman") +
  labs(x="Tick",y="Agent Count") 

ggsave('../figures/core/Figure-06.png',height = 4, width = 6, device = 'png', bg = 'white',dpi=1200)
ggsave('../figures/core/Include-SRA-w-Canonical-Mechanisms.pdf',height = 4, width = 6,device = cairo_pdf)
```






# Probabilistic Release




## Fear Extinction

```{r}
d1 = fread('../data/core/experiment-04-fear-decreasing-small-world-table.csv',skip = 6) %>%
  prep_data()

d2 = fread('../data/core/experiment-07-fear-decreasing-small-world-probabilistic-release-table.csv',skip = 6) %>%
  prep_data() %>%
  mutate(run_number = run_number + random_seed_num)

dat = rbindlist(l = list(d1,d2),fill = T) %>%
  mutate(Release_Mechanism= paste("Release via: ",
                                         str_replace(Release_Mechanism,"-"," ") %>% str_to_title()))



dat %>% epi_plot(one_disease_rate = T,base_size = 8,txt_size = 4) +
  facet_grid(Disease_Infection_Rate ~ experiment + Release_Mechanism)
ggsave('../figures/core/Figure-07.png', height = 4, width = 6, device = 'png',bg='white',dpi=1200)

dat %>% epi_plot(one_disease_rate = F,base_size = 15,txt_size = 8) +
  facet_grid(Disease_Infection_Rate ~ experiment + Release_Mechanism)
ggsave('../figures/core/Supp/Supplement-Compare-Release-Mechanisms.pdf', height = 8, width = 11.5, device = cairo_pdf)
```
## Calibrate Probability of Release Damping Coefficient
```{r}
data = fread(file = '../data/core/calibrate-prob-release-damping-table.csv', skip = 6) %>%
  prep_data() %>%
  mutate(mean_avg_hide_time = as.numeric(mean_avg_hide_time)) %>%
  dplyr::select(run_number,mean_avg_hide_time,prob_release_damping) 

data.mean = data %>% 
  group_by(prob_release_damping) %>%
  summarise(mean_avg_hide_time = mean(mean_avg_hide_time,na.rm = T)) %>%
  mutate(label = round(mean_avg_hide_time,2))

data %>%
  ggplot() +
  aes(x=mean_avg_hide_time) +
  geom_histogram(fill='blue',alpha=0.4) + 
  geom_vline(mapping = aes(xintercept=mean_avg_hide_time),
             data = data.mean,
             linetype="dashed",col='red') + 
  geom_label(data = data.mean, col = 'red', mapping = aes(label=label),x=5,y=75) +
  facet_wrap(~prob_release_damping) + 
  xlim(c(0,8)) +
  plot_theme() +
  labs(x = "Average Hide Time During Simulation (100 runs)")
ggsave(filename = '../figures/core/Supp/Calibrate-Release-Probability.pdf', height = 8, width = 11.5,device = cairo_pdf)
```


```{r}
cat('Compiled figures in: ', round(proc.time()[3]-s,3),'seconds \n')
```


# Session
```
R version 4.3.2 (2023-10-31)
Platform: x86_64-apple-darwin21.6.0 (64-bit)
Running under: macOS Monterey 12.5

Matrix products: default
BLAS:   /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 
LAPACK: /usr/local/Cellar/r/4.3.2/lib/R/lib/libRlapack.dylib;  LAPACK version 3.11.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Chicago
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] scales_1.2.1      ggsci_3.0.0       lubridate_1.9.2   forcats_1.0.0     stringr_1.5.0     dplyr_1.1.2       purrr_1.0.1       readr_2.1.4      
 [9] tidyr_1.3.0       tibble_3.2.1      ggplot2_3.4.2     tidyverse_2.0.0   data.table_1.14.8

loaded via a namespace (and not attached):
 [1] gtable_0.3.3     crayon_1.5.2     compiler_4.3.2   tidyselect_1.2.0 R6_2.5.1         labeling_0.4.2   generics_0.1.3   knitr_1.42      
 [9] munsell_0.5.0    pillar_1.9.0     tzdb_0.4.0       rlang_1.1.1      utf8_1.2.3       stringi_1.7.12   xfun_0.39        timechange_0.2.0
[17] cli_3.6.1        withr_2.5.0      magrittr_2.0.3   grid_4.3.2       rstudioapi_0.14  hms_1.1.3        cowplot_1.1.1    lifecycle_1.0.3 
[25] vctrs_0.6.2      glue_1.6.2       farver_2.1.1     fansi_1.0.4      colorspace_2.1-0 tools_4.3.2      pkgconfig_2.0.3 
```

