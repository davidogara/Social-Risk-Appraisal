---
title: "Social Risk Appraisal Model Figures - Sensitivity"
format: 
  beamer:
    fig-pos: 'h'
    fig-width: 5.5
    fig-height: 3
engine: knitr
pdf-engine: pdflatex
colorlinks: true
---

# Intro



## Introduction

```{r setup, include=FALSE}
s = proc.time()[3]
dev = 'cairo_pdf'
PERCENT_SIGN = '%'
knitr::opts_chunk$set(echo = F, warning = F, message = F, dev = dev, cache = T, cache.lazy = F)
library(data.table)
library(tidyverse)
library(stringr)
```

```{r utility_functions}
color_map = c(
  "Contagion"             = "#BC3C29FF",
  "Social Risk Appraisal" = "#0072B5FF",
  "Complex Contagion"     = "#E18727FF"
)
names(color_map) = paste0("Fear Spread via:\n",names(color_map))
plot_theme = function(base_size=10){
  theme_classic(base_size = base_size) +
  theme(axis.text.y.right = element_blank(),
        axis.line.y.right = element_blank(),
        axis.ticks.y.right = element_blank(),
        legend.position = "top",
        strip.background = element_blank(),
        axis.title = element_text(color = 'black'),
        axis.text = element_text(color = 'black')
        )
}

make_variable_names = function(data_names){
  data_names |>
    stringr::str_replace_all(pattern = "[.]", replacement = "_") |>
    stringr::str_replace_all(pattern = "-"  , replacement = "_") |>
    stringr::str_replace_all(pattern = "[?]", replacement = "") |>
    stringr::str_replace_all(pattern = "\\[", replacement = "") |>
    stringr::str_replace_all(pattern = "\\]", replacement = "") |>
    stringr::str_replace_all(pattern = " "  , replacement = "_")
}


# data cleaning
prep_data = function(dat)
{
setnames(dat,new = make_variable_names(names(dat)))
setorder(dat,"step","run_number")
dat[,experiment:=paste0("Fear Spread via:\n",fcase(Fear_Mechanism=="Complex Contagion-Gamma","Contagion",
                                                  Fear_Mechanism=="FTA","Social Risk Appraisal"))]
dat
}

# core analysis plot
epi_plot = function(dat,top.n=NULL,one_disease_rate = F,txt_size = 10,...)
{
n_agents = dat[,unique(num_turtles)]
dat[,count_infected:=n_agents*percent_infected/100]


if (one_disease_rate){
  disease_rate = dat[,unique(Disease_Infection_Rate)] %>% median()
  dat = dat[Disease_Infection_Rate==disease_rate]
}

group_cols = c("experiment","Disease_Infection_Rate","Fear_Infection_Rate")

if ("Release_Mechanism" %in% names(dat)){
  group_cols = c(group_cols,"Release_Mechanism")
}

# select run leading to median levels of infection
cols = c(group_cols,"percent_infected","run_number")
setorder(dat,"percent_infected")
last_step = dat[step==max(step),]
setorderv(last_step,c(group_cols,"percent_infected"))
cumulative_rns = last_step[,
                 .(percent_infected = head(percent_infected,25) %>% tail(1) # with 50 runs, select top 25 and then 25th
                   ),
                   by=c(group_cols,"step")] %>%
  merge.data.table(dat,
                   by = c(group_cols,"step","percent_infected"),
                   all.x = F,
                   all.y = F) %>%
  setorder("run_number") %>% # in the event of ties, pick lowest run number
  unique(by=group_cols) %>%
  .[,run_number]


## calculate proportion of infections happening in second half of model run

dat = merge.data.table(dat,
                       y = dat[step>2,
                                .(day_max      = step[which.max(count_disease_I)],
                                  epidemic_end = if_else(min(count_disease_I)==0,step[which.min(count_disease_I)],149)), 
                               by=run_number],
                       by = "run_number")


infections_at_peak = dat |> filter(step==day_max) %>%
  select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)
infections_at_end = dat |> filter(step==max(step)) %>% 
  select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)

infections_epi_end = dat |> filter(step==epidemic_end) %>%
  select(run_number,count_infected,count_disease_I,Disease_Infection_Rate,experiment,step,Release_Mechanism)



labels = dat |> 
  filter(step==max(step)) |> 
  group_by(across(all_of(group_cols))) |> 
  summarise(CI = paste0("Avg Total Infected:\n",round(mean(percent_infected),2),PERCENT_SIGN," Â± ",round(sd(percent_infected),2)))

label_peak_infect =  infections_at_peak %>% 
                     filter(run_number %in% cumulative_rns) %>%
                     mutate(peak_infections = paste0('Peak infections: ',round(100*count_disease_I/n_agents,2),PERCENT_SIGN))


label_epidemic_ends = infections_epi_end %>%
                      filter(run_number %in% cumulative_rns) %>%
                      mutate(epi_end_label = paste0('Epidemic ends at tick: ',step))

label_arrows = merge.data.table(label_peak_infect, label_epidemic_ends, by = "run_number", suffixes = c("_peak","_end")) %>%
               mutate(label = paste0(peak_infections,'\n',epi_end_label))

p = dat  |> 
  mutate(rn_alpha = if_else(run_number %in% cumulative_rns,1.0,0.1)) %>%
  ggplot() +
  # plot
  aes(x=step,y=count_disease_I,color=experiment,group=run_number,alpha=rn_alpha) +
  geom_line(show.legend = F) + # individual runs
  facet_grid(Disease_Infection_Rate~experiment) +
  # color
  scale_color_manual(values=color_map)+
  # format
  labs(y="Infected Agents",x="Tick") +
  plot_theme(...)



# add labels
y.lim = ggplot_build(p)$layout$panel_scales_y[[1]]$range$range[2]

p = p + geom_text(data = labels,
            mapping = aes(label=CI,alpha=1.0),x=120,y=0.85*y.lim,
            group=-1,color='black',size=txt_size/.pt,show.legend = F) +
  # arrow and label for peak infected
  geom_segment(
    data = label_peak_infect,
    mapping = aes(xend=step,yend=count_disease_I,y=NULL,group=NULL),
    alpha = 1.0,
    x = 120, y = (0.34*y.lim),
    lineend = "round", # See available arrow types in example above
    linejoin = "round",
    size = 1, 
    arrow = arrow(length = unit(0.1, "inches"),type = "closed"),
    colour = "black" # Also accepts "red", "blue' etc
  ) +
  geom_label(data = label_peak_infect,
            mapping = aes(label=peak_infections,alpha=1.0),x=115,y=0.36*y.lim,
            label.size = NA,
            group=-1,color='black',size=txt_size/.pt,show.legend = F) +
  
  # arrow and label for epidemic end
  geom_segment(
    data = label_epidemic_ends,
    mapping = aes(xend=step,yend=count_disease_I,y=NULL,group=NULL),
    alpha = 1.0,
    x = 120, y = (0.20*y.lim),
    lineend = "round", # See available arrow types in example above
    linejoin = "round",
    size = 1, 
    arrow = arrow(length = unit(0.1, "inches"),type = "closed"),
    colour = "black" # Also accepts "red", "blue' etc
  ) +
  geom_label(data = label_epidemic_ends,
            mapping = aes(label=epi_end_label,alpha=1.0),x=115,y=0.22*y.lim,
            label.size = NA,
            group=-1,color='black',size=txt_size/.pt,show.legend = F)

if(one_disease_rate==F){
  p = p + 
    scale_y_continuous(sec.axis = sec_axis(~.*1.0,name="Disease Infection Rate"))
}
if (one_disease_rate){
  p = p + 
    theme(strip.background = element_blank(),
          strip.text.y = element_blank())
}
p

}
```


# Socially Driven Fear Amplifications
## Spatially Clustered
```{r}
dat.spatial = rbindlist(
  l = list(
    fread('../data/sensitivity/experiment-01-fear-increasing-spatially-clustered-sensitivity-table.csv',skip = 6) %>% prep_data(),
    fread('../data/sensitivity/experiment-01a-fear-increasing-spatially-clustered-complex-contagion-sensitivity-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)
p.spatial = dat.spatial %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
p.spatial
ggsave('../figures/sensitivity/Supp/Socially-Driven-Fear-Amplification-Spatially-Clustered.pdf',height = 8, width = 11.5, device = cairo_pdf)
```


## Small World
```{r}
dat.small_world = rbindlist(
  l = list(
    fread('../data/sensitivity/experiment-03-fear-increasing-small-world-sensitivity-table.csv',skip = 6) %>% 
    prep_data(),
    fread('../data/sensitivity/experiment-03a-fear-increasing-small-world-complex-contagion-sensitivity-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number))
)


dat.small_world %>%
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
ggsave('../figures/sensitivity/Supp/Socially-Driven-Fear-Amplification-Small-World.pdf',height = 8, width = 11.5, device = cairo_pdf)
```

# Socially Driven Fear Extinction

## Spatially Clustered

```{r}
dat.spatial = rbindlist(
  l = list(
    fread('../data/sensitivity/experiment-02-fear-decreasing-spatially-clustered-sensitivity-table.csv',skip = 6) %>% prep_data() ,
    fread('../data/sensitivity/experiment-02a-fear-decreasing-spatially-clustered-complex-contagion-sensitivity-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)
p.spatial = dat.spatial %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Spatially Clustered") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))

p.spatial
ggsave('../figures/sensitivity/Supp/Socially-Driven-Fear-Extinction-Spatially-Clustered.pdf', height = 8, width = 11.5, device = cairo_pdf)
```

## Small-World
```{r}
dat.small_world = rbindlist(
  l = list(
    fread('../data/sensitivity/experiment-04-fear-decreasing-small-world-sensitivity-table.csv',skip = 6) %>% prep_data() ,
    fread('../data/sensitivity/experiment-04a-fear-decreasing-small-world-complex-contagion-sensitivity-table.csv',skip = 6) %>%
      prep_data() %>% 
      mutate(experiment = "Fear Spread via:\nComplex Contagion",
         run_number = random_seed_num + run_number)
  )
)



p.small_world = dat.small_world %>% 
  epi_plot(one_disease_rate = F,base_size = 15,txt_size = 9) + 
  labs(title="Small World") + 
  theme(plot.title = element_text(hjust = 0.5,size = 18))
p.small_world
ggsave('../figures/sensitivity/Supp/Socially-Driven-Fear-Extinction-Small-World.pdf', height = 8, width = 11.5, device = cairo_pdf)
```


# Clustering



## Fear Amplification
```{r}
lvls = paste0("Node Swapping: ",round(100*c(0,0.25,0.5,0.75,1),0),PERCENT_SIGN)
dat = fread('../data/sensitivity/experiment-05-fear-increasing-small-world-vary-clustering-and-swapping-sensitivity-table.csv',
              skip=6) %>%
  prep_data() %>%
  filter(step == max(step)) %>%
  mutate(percent_nodes_swapped = paste0("Node Swapping: ",round(100*percent_nodes_swapped,0),PERCENT_SIGN)) %>%
  mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls))

p.clustered_fear_increasing = dat %>%
  ggplot() +
  aes(x=percent_links_rewired,y=percent_infected,col=experiment) +
  geom_point(alpha=0.1,size=0.01) +
  stat_summary(geom = "line", fun = mean) +
  stat_summary(geom="point",fun = mean,size=0.75) +
  scale_color_manual(values=color_map,name=NULL) +
  plot_theme(base_size = 14) +
  facet_wrap(~percent_nodes_swapped,ncol=1) +
  scale_x_continuous(labels = scales::percent) + 
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  labs(x="Percent Links Rewired (Decreasing Clustering)",y="Cumulative Infections")

p.clustered_fear_increasing
```
## Fear Extinction
```{r}
dat = fread('../data/sensitivity/experiment-06-fear-decreasing-small-world-vary-clustering-and-swapping-sensitivity-table.csv',skip=6) %>%
  prep_data() %>%
  filter(step == max(step)) %>%
  mutate(percent_nodes_swapped = paste0("Node Swapping: ",round(100*percent_nodes_swapped,0),PERCENT_SIGN)) %>%
  mutate(percent_nodes_swapped = factor(percent_nodes_swapped,levels = lvls))

p.clustered_fear_decreasing = dat %>%
  ggplot() +
  aes(x=percent_links_rewired,y=percent_infected,col=experiment) +
  geom_point(alpha=0.1,size=0.01) +
  stat_summary(geom = "line", fun = mean) +
  stat_summary(geom="point",fun = mean,size=0.75) +
  scale_color_manual(values=color_map,name=NULL) +
  plot_theme(base_size = 14) +
  facet_wrap(~percent_nodes_swapped,ncol=1) +
  scale_x_continuous(labels = scales::percent) + 
  scale_y_continuous(labels = function(x) paste0(x, "%")) +
  labs(x="Percent Links Rewired (Decreasing Clustering)",y="Cumulative Infections")

p.clustered_fear_decreasing
```

## Combined

```{r}
cowplot::plot_grid(
  p.clustered_fear_increasing + 
    labs(title="Socially-Driven Fear Amplification") + 
    theme(plot.title = element_text(hjust = 0.5,size=16)) + 
    scale_y_continuous(limits = c(0,80), labels = function(x) paste0(x,"%"),breaks = seq(0,80,by=20)),
  p.clustered_fear_decreasing + 
    labs(title="Socially-Driven Fear Extinction") + 
    theme(plot.title = element_text(hjust = 0.5,size=16)) + 
    scale_y_continuous(limits = c(0,80), labels = function(x) paste0(x,"%"),breaks = seq(0,80,by=20)),
  labels = c("a","b")
)
ggsave('../figures/sensitivity/SRA-Results-Robust-to-Clustering.pdf', height = 8, width = 11.5, device = cairo_pdf)
```




# Probabilistic Release




## Fear Extinction

```{r}
d1 = fread('../data/sensitivity/experiment-04-fear-decreasing-small-world-sensitivity-table.csv',skip = 6) %>%
  prep_data()

d2 = fread('../data/sensitivity/experiment-07-fear-decreasing-small-world-probabilistic-release-sensitivity-table.csv',skip = 6) %>%
  prep_data() %>%
  mutate(run_number = run_number + random_seed_num)

dat = rbindlist(l = list(d1,d2),fill = T) %>%
  mutate(Release_Mechanism= paste("Release via: ",
                                         str_replace(Release_Mechanism,"-"," ") %>% str_to_title()))




dat %>% epi_plot(one_disease_rate = F,base_size = 15,txt_size = 8) +
  facet_grid(Disease_Infection_Rate ~ experiment + Release_Mechanism)
ggsave('../figures/sensitivity/Supp/Supplement-Compare-Release-Mechanisms.pdf', height = 8, width = 11.5, device = cairo_pdf)

```
# Session
```
R version 4.3.2 (2023-10-31)
Platform: x86_64-apple-darwin21.6.0 (64-bit)
Running under: macOS Monterey 12.5

Matrix products: default
BLAS:   /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 
LAPACK: /usr/local/Cellar/r/4.3.2/lib/R/lib/libRlapack.dylib;  LAPACK version 3.11.0

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Chicago
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] scales_1.2.1      ggsci_3.0.0       lubridate_1.9.2   forcats_1.0.0     stringr_1.5.0     dplyr_1.1.2       purrr_1.0.1       readr_2.1.4      
 [9] tidyr_1.3.0       tibble_3.2.1      ggplot2_3.4.2     tidyverse_2.0.0   data.table_1.14.8

loaded via a namespace (and not attached):
 [1] gtable_0.3.3     crayon_1.5.2     compiler_4.3.2   tidyselect_1.2.0 R6_2.5.1         labeling_0.4.2   generics_0.1.3   knitr_1.42      
 [9] munsell_0.5.0    pillar_1.9.0     tzdb_0.4.0       rlang_1.1.1      utf8_1.2.3       stringi_1.7.12   xfun_0.39        timechange_0.2.0
[17] cli_3.6.1        withr_2.5.0      magrittr_2.0.3   grid_4.3.2       rstudioapi_0.14  hms_1.1.3        cowplot_1.1.1    lifecycle_1.0.3 
[25] vctrs_0.6.2      glue_1.6.2       farver_2.1.1     fansi_1.0.4      colorspace_2.1-0 tools_4.3.2      pkgconfig_2.0.3 
```

